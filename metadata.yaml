# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

name: alertmanager-k8s
assumes:
  - k8s-api

  # Juju 3.0.3+ needed for secrets and open-port
  - juju >= 3.0.3

summary: |
  Kubernetes charm for Alertmanager.

description: |
  Alertmanager handles alerts sent by client applications such as the Prometheus server.
  It takes care of deduplicating, grouping, and routing them to the correct receiver integrations
  such as email, PagerDuty, or OpsGenie. It also takes care of silencing and inhibition of alerts.

website: https://charmhub.io/alertmanager-k8s
source: https://github.com/canonical/alertmanager-k8s-operator
issues: https://github.com/canonical/alertmanager-k8s-operator/issues
docs: https://discourse.charmhub.io/t/alertmanager-k8s-docs-index/5788

# workload containers
containers:
  alertmanager:  # container key used by pebble
    resource: alertmanager-image
    mounts:
      - storage: data
        # nflogs and silences files go here. With a mounted storage for silences, they persist
        # across container restarts.
        # This path is passed to alertmanager via the `--storage.path` cli argument.
        location: /alertmanager

# oci-image resources for each container defined above
resources:
  alertmanager-image:
    type: oci-image
    description: |
      OCI image for alertmanager. This charms makes the following assumptions about the image:
      - location of executable "alertmanager" is in the path
      - has `update-ca-certificates`
    upstream-source: ghcr.io/canonical/alertmanager:0.25.0

provides:
  alerting:
    # The provider (alertmanager) adds the following key-value pair to the relation data bag of
    # every alertmanager unit:
    #   "public_address": <ip_address>:<port>
    interface: alertmanager_dispatch
    # assumed network type: private
  karma-dashboard:
    interface: karma_dashboard
    description: |
      Links an entire Alertmanager cluster to a Karma[1] dashboard.
      Scaling alertmanager would automatically cause karma to group alerts by cluster.

      [1] https://charmhub.io/karma-k8s
  self-metrics-endpoint:
    interface: prometheus_scrape
  grafana-dashboard:
    interface: grafana_dashboard
  grafana-source:
    interface: grafana_datasource

requires:
  ingress:
    interface: ingress
    limit: 1
    description: |
      Alertmanager typically needs a "per app" ingress, which is available in the traefik charm[1].

      [1] https://charmhub.io/traefik-k8s
  remote-configuration:
    interface: alertmanager_remote_configuration
    limit: 1
  catalogue:
    interface: catalogue
  certificates:
    interface: tls-certificates
    limit: 1
    description: |
      Certificate and key files for the alertmanager server to use to authenticate to client.

peers:
  replicas:
    interface: alertmanager_replica
    # assumed network type: private

storage:
  data:
    type: filesystem
    description: >
      Storage path passed to alertmanager via --storage.path argument and used for nflog and silences snapshot
