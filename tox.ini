# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[testenv]
basepython = python3.8
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{toxinidir}/src
  PYTHONBREAKPOINT=ipdb.set_trace
passenv =
  PYTHONPATH
  HOME
  PATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[flake8]
exclude =
    .git,
    __pycache__,
    .tox,
    build,
    dist,
    *.egg_info
    venv
max-line-length = 99
max-doc-length = 99
max-complexity = 10
select = E,W,F,C,N,R,D,H
# Ignore W503, E501 because using black creates errors with this
# D107 Missing docstring in __init__
ignore = W503,E501,D107
per-file-ignores =
    # D100 Missing docstring in public module
    # D101 Missing docstring in public class
    # D102 Missing docstring in public method
    # D103 Missing docstring in public function
    tests/*:D100,D101,D102,D103
docstring-convention = google
copyright-check = True
copyright-author = Canonical Ltd.
copyright-regexp = Copyright\s\d{4}([-,]\d{4})*\s+%(author)s

[isort]
profile = black

[testenv:prettify]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {toxinidir}/src/. {toxinidir}/tests/. {toxinidir}/lib/charms/alertmanager_k8s/.
    black --line-length=99 --target-version=py38 {toxinidir}/src {toxinidir}/tests {toxinidir}/lib/charms/alertmanager_k8s

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pep8-naming
    isort
commands =
    flake8 {toxinidir}/src {toxinidir}/tests {toxinidir}/lib/charms/alertmanager_k8s
    isort --check-only --diff {toxinidir}/src/. {toxinidir}/tests/. {toxinidir}/lib/charms/alertmanager_k8s/.
    black --check --diff --line-length=99 --target-version=py38 {toxinidir}/src {toxinidir}/tests {toxinidir}/lib/charms/alertmanager_k8s

[testenv:static]
description = Run static analysis checks
deps =
    -r{toxinidir}/requirements.txt
    mypy
    types-PyYAML
    pytest
    pytest-operator
    juju
    types-setuptools
    types-toml
commands =
    mypy --config-file={toxinidir}/mypy.ini {toxinidir}/src/charm.py {toxinidir}/tests {posargs}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage
    -r{toxinidir}/requirements.txt
commands =
    coverage run --branch --source={toxinidir}/src,{toxinidir}/lib/charms/alertmanager_k8s -m pytest -v --tb native {posargs} {toxinidir}/tests/unit
    coverage report -m
